#!/usr/bin/sh

set -e

# Generates assets.go, which has all assets embedded in vars

# Find all files in the static directory
files=$(find ./static -type f)

function filenameToVar() {
    echo "${1#./static/}" | sed 's/[^a-zA-Z0-9]/_/g' | sed 's/^_//'
}

function writeLine() {
    echo "$1" >> assets.go
}

# Start the assets.go file
rm assets.go 2> /dev/null || true
writeLine 'package viki'
writeLine ''
writeLine '// Code generated by gen-assets.sh; DO NOT EDIT.'
writeLine ''
writeLine 'import ('
writeLine '	_ "embed"'
writeLine ' "html/template"'
writeLine ')'
writeLine ''
writeLine 'var ('

# Loop through each file and embed its content
for file in $files; do
    var_name=$(filenameToVar "${file}")
    writeLine "	//go:embed ${file#./}"
    writeLine "	static_${var_name} []byte"
    writeLine ''
done

writeLine ")"

# Create a map of the filenames to the variables
writeLine ''
writeLine 'var staticAssetFileMap = map[string][]byte{'
for file in $files; do
    var_name=$(filenameToVar "${file}")
    writeLine "	\"_viki_static/${file#./static/}\": static_${var_name},"
done
writeLine '}'

# Find all templates with any extension in the templates directory
template_files=$(find ./templates -type f)

# Loop through each template file and embed its content
writeLine ''
writeLine 'var ('
for file in $template_files; do
    var_name=$(filenameToVar "${file#./templates/}")
    writeLine "	//go:embed ${file#./}" >> assets.go
    writeLine "	raw_${var_name} string"
    filenameWithoutExt=$(basename "$file")
    filenameWithoutExt="${filenameWithoutExt%%.*}"
    writeLine "	template_${var_name} = template.Must(template.New(\"${filenameWithoutExt}\").Parse(raw_${var_name}))"
    writeLine ''
done
writeLine ")"

# Quietly fix up our whitespace abuse
go fmt assets.go > /dev/null 2>&1