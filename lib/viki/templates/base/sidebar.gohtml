<h1><a href="/">Viki Home</a></h1>
<ul class="sidebar-list">
{{- range .Nodes }}
    <li>
        {{- if .IsDir }}
            <span data-path="{{ .URL }}" class="collapsible" onclick="toggleCollapse(this)">&#9654; {{ .Name }}</span>
            {{- if .Children }}
                <div class="collapsible-content" style="display:none;">
                    {{ template "inner" .Children }}
                </div>
            {{- end }}
        {{- else }}
            <a href="/{{ .URL }}">{{ .Name }}</a>
        {{- end }}
    </li>
{{- end }}
</ul>

{{/* Define the recursive template */}}
{{ define "inner" }}
<ul class="sidebar-list">
{{- range . }}
    <li>
        {{- if .IsDir }}
            <span data-path="{{ .URL }}" class="collapsible" onclick="toggleCollapse(this)">&#9654; {{ .Name }}</span>
            {{- if .Children }}
                <div class="collapsible-content" style="display:none;">
                    {{ template "inner" .Children }}
                </div>
            {{- end }}
        {{- else }}
            <a href="/{{ .URL }}">{{ .Name }}</a>
        {{- end }}
    </li>
{{- end }}
</ul>
{{ end }}

<script>
function toggleCollapse(el) {
    var content = el.parentElement.querySelector('.collapsible-content');
    if (!content) return;
    if (content.style.display === 'none') {
        content.style.display = 'block';
        el.innerHTML = '&#9660; ' + el.textContent.slice(2);
    } else {
        content.style.display = 'none';
        el.innerHTML = '&#9654; ' + el.textContent.slice(2);
    }
}

document.addEventListener("DOMContentLoaded", function() {
    var path = window.location.pathname.replace(/^\//, '');
    var segments = path.split('/').filter(Boolean);

    // Build all possible paths from root to current
    var paths = [];
    for (var i = 0; i < segments.length; i++) {
        paths.push(segments.slice(0, i + 1).join('/'));
    }

    console.log('Current paths:', paths);

    var sidebar = document.querySelector('.sidebar-list');
    if (!sidebar) return;

    // Mark active link
    var links = sidebar.querySelectorAll('a[href]');
    links.forEach(function(link) {
        var linkPath = link.getAttribute('href').replace(/^\//, '');
        if (paths.includes(linkPath)) {
            link.classList.add('active');
        }
    });

    // Expand all collapsibles whose data-path is on the active path
    var collapsibles = sidebar.querySelectorAll('.collapsible[data-path]');
    collapsibles.forEach(function(collapsible) {
        var dataPath = collapsible.getAttribute('data-path').replace(/^\//, '');
        console.log('Checking collapsible with data-path:', dataPath);
        if (paths.includes(dataPath)) {
            var content = collapsible.parentElement.querySelector('.collapsible-content');
            if (content && content.style.display === 'none') {
                toggleCollapse(collapsible);
            }
        }
    });
});
</script>